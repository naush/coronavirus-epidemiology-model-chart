{"version":3,"sources":["components/Navigator.js","layouts/Main.js","components/TextFieldWithLongLabel.js","components/Chart.js","components/Footer.js","containers/Home.js","containers/SafeGroupSize.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","withRouter","props","useState","anchor","setAnchor","classes","handleClose","path","history","push","IconButton","edge","className","color","aria-label","onClick","event","currentTarget","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","title","flexGrow","Main","Container","maxWidth","disableGutters","AppBar","position","elevation","Toolbar","Typography","variant","children","TextFieldWithLongLabel","label","value","changeHandler","TextField","type","defaultValue","onChange","InputLabelProps","shrink","fullWidth","Chart","data","strokeDasharray","dataKey","labelFormatter","day","name","stroke","palette","primary","main","activeDot","r","secondary","root","padding","Footer","Box","Link","target","href","paper","textAlign","text","chart","breakpoints","up","height","width","margin","down","Home","useTheme","numberOfDaysPerDoubling","numberOfDaysFromInfectionToDeath","mortalityRate","numberOfDaysFromInfectionToHospitalization","hopistalizationRate","numberOfDaysFromInjectionToOutOfHospital","options","setOptions","model","Model","Array","from","_","filter","map","dataset","ofDay","numberOfCases","toFixed","numberOfDeaths","numberHospitalized","numberInHospitalAtTheTime","attribute","e","Number","Grid","container","item","sm","Paper","clsx","SafeGroupSize","populationInMetropolitanArea","estimatedNumberOfCases","Calculator","calculate","createMuiTheme","App","ThemeProvider","basename","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68001b61.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction Navigator(props) {\n  const [anchor, setAnchor] = useState(null);\n  const classes = useStyles();\n\n  const handleOpen = (event) => {\n    setAnchor(event.currentTarget);\n  };\n\n  const handleClose = (path) => () => {\n    if (path) {\n      props.history.push(path);\n    }\n\n    setAnchor(null);\n  };\n\n  return (\n    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n      <MenuIcon onClick={handleOpen} />\n      <Menu\n        anchorEl={anchor}\n        keepMounted\n        open={Boolean(anchor)}\n        onClose={handleClose()}\n      >\n        <MenuItem onClick={handleClose('/')}>Projection</MenuItem>\n        <MenuItem onClick={handleClose('/safe-group-size')}>Safe Group Size</MenuItem>\n      </Menu>\n    </IconButton>\n  );\n}\n\nexport default withRouter(Navigator);\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Navigator from './../components/Navigator';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Main(props) {\n  const classes = useStyles();\n\n  return (\n    <Container\n      maxWidth={false}\n      disableGutters={true}\n    >\n      <AppBar position=\"static\" elevation={0}>\n        <Toolbar>\n          <Navigator />\n          <Typography variant=\"h6\" className={classes.title}>\n            Coronavirus Epidemiology Model\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {props.children}\n    </Container>\n  );\n}\n\nexport default Main;\n","import React, { Fragment } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nfunction TextFieldWithLongLabel(props) {\n  const {\n    label,\n    value,\n    changeHandler\n  } = props;\n\n  return (\n    <Fragment>\n      <Typography variant='overline'>\n        {label}\n      </Typography>\n      <TextField\n        type=\"number\"\n        defaultValue={value}\n        onChange={changeHandler}\n        InputLabelProps={{ shrink: true, }}\n        variant=\"outlined\"\n        fullWidth\n      />\n    </Fragment>\n  );\n}\n\nexport default TextFieldWithLongLabel;\n","import React from 'react';\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\n\nfunction Chart(props) {\n  const { data, theme } = props;\n\n  return (\n    <ResponsiveContainer>\n      <LineChart\n        data={data}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip labelFormatter={(day) => `Day ${day}`} />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"numberOfCases\" name=\"Number of Cases\" stroke={theme.palette.primary.main} activeDot={{ r: 8 }} />\n        <Line type=\"monotone\" dataKey=\"numberOfDeaths\" name=\"Number of Deaths\" stroke={theme.palette.secondary.main} />\n        <Line type=\"monotone\" dataKey=\"numberHospitalized\" name=\"Number Hospitalized\" stroke={theme.palette.secondary.main} />\n        <Line type=\"monotone\" dataKey=\"numberInHospitalAtTheTime\" name=\"Number in hospital at the time\" stroke={theme.palette.secondary.main} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default Chart;\n","import React from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2, 0, 0),\n  },\n}));\n\nfunction Footer(props) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography>\n        Source: <Link color=\"primary\" target=\"_blank\" href=\"https://www.sleepphones.com/Coronavirus-predictions-mortality-rate\">SleepPhones</Link>.\n      </Typography>\n    </Box>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport clsx from  'clsx';\n\nimport Container from '@material-ui/core/Container';\n\nimport TextFieldWithLongLabel from './../components/TextFieldWithLongLabel';\nimport Chart from './../components/Chart';\nimport Footer from './../components/Footer';\n\nimport { Model } from 'coronavirus-epidemiology-model';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  chart: {\n    [theme.breakpoints.up('sm')]: {\n      height: theme.spacing(60),\n      width: theme.spacing(120),\n      margin: theme.spacing(4, 4, 0, 0),\n    },\n\n    [theme.breakpoints.down('sm')]: {\n      height: theme.spacing(35),\n      width: theme.spacing(35),\n    },\n  },\n}));\n\nfunction Home(props) {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const [options, setOptions] = useState({\n    numberOfDaysPerDoubling: 7,\n    numberOfDaysFromInfectionToDeath: 20,\n    mortalityRate: 0.015,\n    numberOfDaysFromInfectionToHospitalization: 12,\n    hopistalizationRate: 0.2,\n    numberOfDaysFromInjectionToOutOfHospital: 40,\n  });\n\n  const model = new Model(options);\n  const days = Array.from(new Array(84), (_, day) => day + 1).filter((day) => day % 7 === 0);\n\n  const data = days.map((day) => {\n    const dataset = model.ofDay(day);\n\n    return {\n      name: day,\n      numberOfCases: dataset.numberOfCases.toFixed(0),\n      numberOfDeaths: dataset.numberOfDeaths.toFixed(0),\n      numberHospitalized: dataset.numberHospitalized.toFixed(0),\n      numberInHospitalAtTheTime: dataset.numberInHospitalAtTheTime.toFixed(0),\n    };\n  });\n\n  const changeHandler = (attribute) => (e) => {\n    setOptions({\n      ...options,\n      [attribute]: Number(e.target.value),\n    });\n  }\n\n  return (\n    <Container\n      maxWidth={false}\n      disableGutters={true}\n    >\n      <Grid container spacing={0}>\n        <Grid item sm={3}>\n          <Paper elevation={0} className={classes.paper}>\n            <TextFieldWithLongLabel\n              label='Number of days per doubling'\n              value={options.numberOfDaysPerDoubling}\n              changeHandler={changeHandler('numberOfDaysPerDoubling')}\n            />\n            <TextFieldWithLongLabel\n              label='Number of days from infection to death'\n              value={options.numberOfDaysFromInfectionToDeath}\n              changeHandler={changeHandler('numberOfDaysFromInfectionToDeath')}\n            />\n            <TextFieldWithLongLabel\n              label='Mortality rate'\n              value={options.mortalityRate}\n              changeHandler={changeHandler('mortalityRate')}\n            />\n            <TextFieldWithLongLabel\n              label='Number of days from infection to hospitalization'\n              value={options.numberOfDaysFromInfectionToHospitalization}\n              changeHandler={changeHandler('numberOfDaysFromInfectionToHospitalization')}\n            />\n            <TextFieldWithLongLabel\n              label='Number of days from infection to out of hospital (average death or recovery)'\n              value={options.numberOfDaysFromInjectionToOutOfHospital}\n              changeHandler={changeHandler('numberOfDaysFromInjectionToOutOfHospital')}\n            />\n            <Footer />\n          </Paper>\n        </Grid>\n        <Grid item sm={9}>\n          <Paper elevation={0} className={clsx(classes.paper, classes.chart)}>\n            <Chart\n              data={data}\n              theme={theme}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport Container from '@material-ui/core/Container';\n\nimport TextFieldWithLongLabel from './../components/TextFieldWithLongLabel';\nimport Footer from './../components/Footer';\n\nimport { SafeGroupSize as Calculator } from 'coronavirus-epidemiology-model';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  item: {\n    width: '100%',\n  },\n}));\n\nfunction SafeGroupSize(props) {\n  const classes = useStyles();\n\n  const [options, setOptions] = useState({\n    populationInMetropolitanArea: 300000,\n    estimatedNumberOfCases: 35,\n  });\n\n  const changeHandler = (attribute) => (e) => {\n    setOptions({\n      ...options,\n      [attribute]: Number(e.target.value),\n    });\n  }\n\n  return (\n    <Container\n      maxWidth={false}\n      disableGutters={true}\n    >\n      <Grid container spacing={0}>\n        <Grid item sm={3} className={classes.item}>\n          <Paper elevation={0} className={classes.paper}>\n            <TextFieldWithLongLabel\n              label='Population in Metropolitan Area'\n              value={options.populationInMetropolitanArea}\n              changeHandler={changeHandler('populationInMetropolitanArea')}\n            />\n            <TextFieldWithLongLabel\n              label='Estimated Number of Cases'\n              value={options.estimatedNumberOfCases}\n              changeHandler={changeHandler('estimatedNumberOfCases')}\n            />\n            <Footer />\n          </Paper>\n        </Grid>\n        <Grid item sm={9} className={classes.item}>\n          <Paper elevation={0} className={classes.paper}>\n            <Typography variant=\"overline\">\n              The Largest Safe Group Size\n            </Typography>\n            <Typography variant=\"h1\" color=\"primary\">\n              {Calculator.calculate(options).toFixed(0)}\n            </Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default SafeGroupSize;\n","import React from 'react';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport Main from './layouts/Main';\nimport Home from './containers/Home';\nimport SafeGroupSize from './containers/SafeGroupSize';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#9278D1',\n    },\n    secondary: {\n      main: '#428bca',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename={'coronavirus-epidemiology-model-chart'}>\n        <Switch>\n          <Route path='/safe-group-size'>\n            <Main>\n              <SafeGroupSize />\n            </Main>\n          </Route>\n          <Route path='/'>\n            <Main>\n              <Home />\n            </Main>\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}