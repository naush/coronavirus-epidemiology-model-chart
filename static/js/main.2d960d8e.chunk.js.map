{"version":3,"sources":["layouts/Main.js","components/TextFieldWithLongLabel.js","components/Chart.js","components/Footer.js","containers/Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","Main","props","classes","Container","maxWidth","disableGutters","AppBar","position","elevation","Toolbar","IconButton","edge","className","color","aria-label","Typography","variant","children","TextFieldWithLongLabel","label","value","changeHandler","TextField","type","defaultValue","onChange","InputLabelProps","shrink","fullWidth","Chart","data","strokeDasharray","dataKey","labelFormatter","day","name","stroke","palette","primary","main","activeDot","r","secondary","root","padding","Footer","Box","Link","target","href","paper","textAlign","text","chart","breakpoints","up","height","width","margin","down","Home","useTheme","useState","numberOfDaysPerDoubling","numberOfDaysFromInfectionToDeath","mortalityRate","numberOfDaysFromInfectionToHospitalization","hopistalizationRate","numberOfDaysFromInjectionToOutOfHospital","options","setOptions","model","Model","Array","from","_","filter","map","dataset","ofDay","numberOfCases","toFixed","numberOfDeaths","numberHospitalized","numberInHospitalAtTheTime","attribute","e","Number","Grid","container","item","sm","Paper","clsx","createMuiTheme","App","ThemeProvider","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d960d8e.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Main(props) {\n  const classes = useStyles();\n\n  return (\n    <Container\n      maxWidth={false}\n      disableGutters={true}\n    >\n      <AppBar position=\"static\" elevation={0}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Coronavirus Epidemiology Model\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      {props.children}\n    </Container>\n  );\n}\n\nexport default Main;\n","import React, { Fragment } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nfunction TextFieldWithLongLabel(props) {\n  const {\n    label,\n    value,\n    changeHandler\n  } = props;\n\n  return (\n    <Fragment>\n      <Typography variant='overline'>\n        {label}\n      </Typography>\n      <TextField\n        type=\"number\"\n        defaultValue={value}\n        onChange={changeHandler}\n        InputLabelProps={{ shrink: true, }}\n        variant=\"outlined\"\n        fullWidth\n      />\n    </Fragment>\n  );\n}\n\nexport default TextFieldWithLongLabel;\n","import React from 'react';\n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\n\nfunction Chart(props) {\n  const { data, theme } = props;\n\n  return (\n    <ResponsiveContainer>\n      <LineChart\n        data={data}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip labelFormatter={(day) => `Day ${day}`} />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"numberOfCases\" name=\"Number of Cases\" stroke={theme.palette.primary.main} activeDot={{ r: 8 }} />\n        <Line type=\"monotone\" dataKey=\"numberOfDeaths\" name=\"Number of Deaths\" stroke={theme.palette.secondary.main} />\n        <Line type=\"monotone\" dataKey=\"numberHospitalized\" name=\"Number Hospitalized\" stroke={theme.palette.secondary.main} />\n        <Line type=\"monotone\" dataKey=\"numberInHospitalAtTheTime\" name=\"Number in hospital at the time\" stroke={theme.palette.secondary.main} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default Chart;\n","import React from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(2, 0, 0),\n  },\n}));\n\nfunction Footer(props) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Typography>\n        Source: <Link color=\"primary\" target=\"_blank\" href=\"https://www.sleepphones.com/Coronavirus-predictions-mortality-rate\">SleepPhones</Link>.\n      </Typography>\n    </Box>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport clsx from  'clsx';\n\nimport Container from '@material-ui/core/Container';\n\nimport TextFieldWithLongLabel from './../components/TextFieldWithLongLabel';\nimport Chart from './../components/Chart';\nimport Footer from './../components/Footer';\n\nimport { Model } from 'coronavirus-epidemiology-model';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  chart: {\n    [theme.breakpoints.up('sm')]: {\n      height: theme.spacing(60),\n      width: theme.spacing(120),\n      margin: theme.spacing(4, 4, 0, 0),\n    },\n\n    [theme.breakpoints.down('sm')]: {\n      height: theme.spacing(35),\n      width: theme.spacing(35),\n    },\n  },\n}));\n\nfunction Home(props) {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const [options, setOptions] = useState({\n    numberOfDaysPerDoubling: 7,\n    numberOfDaysFromInfectionToDeath: 20,\n    mortalityRate: 0.015,\n    numberOfDaysFromInfectionToHospitalization: 12,\n    hopistalizationRate: 0.2,\n    numberOfDaysFromInjectionToOutOfHospital: 40,\n  });\n\n  const model = new Model(options);\n  const days = Array.from(new Array(84), (_, day) => day + 1).filter((day) => day % 7 === 0);\n\n  const data = days.map((day) => {\n    const dataset = model.ofDay(day);\n\n    return {\n      name: day,\n      numberOfCases: dataset.numberOfCases.toFixed(0),\n      numberOfDeaths: dataset.numberOfDeaths.toFixed(0),\n      numberHospitalized: dataset.numberHospitalized.toFixed(0),\n      numberInHospitalAtTheTime: dataset.numberInHospitalAtTheTime.toFixed(0),\n    };\n  });\n\n  const changeHandler = (attribute) => (e) => {\n    setOptions({\n      ...options,\n      [attribute]: Number(e.target.value),\n    });\n  }\n\n  return (\n    <Container\n      maxWidth={false}\n      disableGutters={true}\n    >\n      <Grid container spacing={0}>\n        <Grid item sm={3}>\n          <Paper elevation={0} className={classes.paper}>\n            <TextFieldWithLongLabel\n              label='Number of days per doubling'\n              value={options.numberOfDaysPerDoubling}\n              changeHandler={changeHandler('numberOfDaysPerDoubling')}\n            />\n            <TextFieldWithLongLabel\n              label='Number of days from infection to death'\n              value={options.numberOfDaysFromInfectionToDeath}\n              changeHandler={changeHandler('numberOfDaysFromInfectionToDeath')}\n            />\n            <TextFieldWithLongLabel\n              label='Mortality rate'\n              value={options.mortalityRate}\n              changeHandler={changeHandler('mortalityRate')}\n            />\n            <TextFieldWithLongLabel\n              label='Number of days from infection to hospitalization'\n              value={options.numberOfDaysFromInfectionToHospitalization}\n              changeHandler={changeHandler('numberOfDaysFromInfectionToHospitalization')}\n            />\n            <TextFieldWithLongLabel\n              label='Number of days from infection to out of hospital (average death or recovery)'\n              value={options.numberOfDaysFromInjectionToOutOfHospital}\n              changeHandler={changeHandler('numberOfDaysFromInjectionToOutOfHospital')}\n            />\n            <Footer />\n          </Paper>\n        </Grid>\n        <Grid item sm={9}>\n          <Paper elevation={0} className={clsx(classes.paper, classes.chart)}>\n            <Chart\n              data={data}\n              theme={theme}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport Main from './layouts/Main';\nimport Home from './containers/Home';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#9278D1',\n    },\n    secondary: {\n      main: '#428bca',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route>\n            <Main>\n              <Route path='/' component={Home} />\n            </Main>\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}